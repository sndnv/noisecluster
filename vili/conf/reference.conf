akka.extensions = ["akka.cluster.pubsub.DistributedPubSub"]
akka.actor.provider = "akka.cluster.ClusterActorRefProvider"
akka.remote.netty.tcp.port = 0
akka.remote.netty.tcp.hostname = "localhost"
akka.actor.serializers.java = "akka.serialization.JavaSerializer"
akka.actor.serialization-bindings {
  "noisecluster.jvm.control.cluster.Messages$StartAudio" = java
  "noisecluster.jvm.control.cluster.Messages$StopAudio" = java
  "noisecluster.jvm.control.cluster.Messages$StartTransport" = java
  "noisecluster.jvm.control.cluster.Messages$StopTransport" = java
  "noisecluster.jvm.control.cluster.Messages$StopApplication" = java
  "noisecluster.jvm.control.cluster.Messages$StopHost" = java
  "noisecluster.jvm.control.cluster.Messages$SetHostVolume" = java
  "noisecluster.jvm.control.cluster.Messages$MuteHost" = java
  "noisecluster.jvm.control.cluster.Messages$UnmuteHost" = java
  "noisecluster.jvm.control.cluster.Messages$RegisterSource" = java
  "noisecluster.jvm.control.cluster.Messages$RegisterTarget" = java
  "noisecluster.jvm.control.cluster.Messages$Ping" = java
  "noisecluster.jvm.control.cluster.Messages$Pong" = java
}
akka.loggers = ["akka.event.slf4j.Slf4jLogger"]

noisecluster.vili {
  actionTimeout = 3 //timeout (in seconds) for various system actions
  interopDllPath = "<path to 'noisecluster.j4n.dll'>"

  audio {
    format {
      sampleRate = 48000
      sampleSizeInBits = 16
    }
  }

  control {
    systemName = "<some system name>" //needs to be the same on all nodes
    messengerName = "<some unique messenger name>" //needs to be unique
    pingInterval = 5 //number of seconds between node status updates
    cluster {
      host = "<some host>" //should be same as local.host, if setup as cluster seed node
      port = 50040
    }
    local {
      host = "<some local interface>"
      port = 50040
    }
  }

  transport {
    provider = "unicast-udp" //one of: [multicast-udp, unicast-udp, aeron]
    debuggingEnabled = false //set to true to enable data handler debugging
    aeron {
      stream = 42
      address = "<some address>"
      port = 50141
    }
    udp {
      multicast-target {
        address = "<some multicast address>"
        port = 50042
      }
      unicast-targets {
        //TEST_TARGET_0 {
        //  address = "<address for target 0>"
        //  port = 50042
        //}
        //TEST_TARGET_1 {
        //  address = "<address for target 1>"
        //  port = 50042
        //}
        //TEST_TARGET_2 {
        //  address = "<address for target 2>"
        //  port = 50042
        //}
      }
      localPort = 50042
    }
  }

  app {
    stopTimeout = 0 //number of seconds to wait before the application is stopped/restarted; set to 0 (or negative) to disable (default)
  }
}